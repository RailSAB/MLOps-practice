{"timestamp":"2025-09-17T17:34:54.591190","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-17T17:34:54.591398","level":"info","event":"Filling up the DagBag from /Users/rail/PracticalML/MLOps-practice/services/airflow/dags/data_pipeline_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-17T17:34:57.008572Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T17:34:57.008761Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T17:34:57.009108Z","level":"info","event":"Current task name:remove_nan","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T17:34:57.009138Z","level":"info","event":"Dag name:data_pipeline_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T17:34:58.912024","level":"info","event":"Done. Returned value was: ('/Users/rail/PracticalML/MLOps-practice/data/processed/train_no_nan.csv', '/Users/rail/PracticalML/MLOps-practice/data/processed/test_no_nan.csv')","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-17T17:34:58.927982","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019958b9-91a5-75be-ab34-42239b452edb'), task_id='remove_nan', dag_id='data_pipeline_dag', run_id='manual__2025-09-17T17:29:40.503913+00:00', try_number=1, map_index=-1, hostname='macbook-air-rail.local', context_carrier=None, task=<Task(PythonOperator): remove_nan>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 17, 17, 34, 52, 829310, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/data_pipeline_dag/runs/manual__2025-09-17T17%3A29%3A40.503913%2B00%3A00/tasks/remove_nan?try_number=1')","logger":"task"}
{"timestamp":"2025-09-17T17:34:59.128943Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T17:34:59.129055Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T17:34:59.142418Z","level":"info","event":"Task operator:<Task(PythonOperator): remove_nan>","chan":"stdout","logger":"task"}
