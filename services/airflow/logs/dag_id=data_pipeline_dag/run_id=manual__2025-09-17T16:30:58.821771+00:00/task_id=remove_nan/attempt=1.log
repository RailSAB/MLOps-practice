{"timestamp":"2025-09-17T16:30:59.949004","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-17T16:30:59.949163","level":"info","event":"Filling up the DagBag from /Users/rail/PracticalML/MLOps-practice/services/airflow/dags/data_pipeline_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-17T16:31:00.626301Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T16:31:00.626394Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T16:31:00.626551Z","level":"info","event":"Current task name:remove_nan","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T16:31:00.626575Z","level":"info","event":"Dag name:data_pipeline_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T16:31:01.223424","level":"info","event":"Done. Returned value was: ('/Users/rail/PracticalML/MLOps-practice/data/processed/train_no_nan.csv', '/Users/rail/PracticalML/MLOps-practice/data/processed/test_no_nan.csv')","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-17T16:31:01.223548","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01995883-d511-7288-85d3-8701248488bb'), task_id='remove_nan', dag_id='data_pipeline_dag', run_id='manual__2025-09-17T16:30:58.821771+00:00', try_number=1, map_index=-1, hostname='macbook-air-rail.local', context_carrier=None, task=<Task(PythonOperator): remove_nan>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 17, 16, 30, 59, 690776, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/data_pipeline_dag/runs/manual__2025-09-17T16%3A30%3A58.821771%2B00%3A00/tasks/remove_nan?try_number=1')","logger":"task"}
{"timestamp":"2025-09-17T16:31:01.248161Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T16:31:01.248218Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-17T16:31:01.248438Z","level":"info","event":"Task operator:<Task(PythonOperator): remove_nan>","chan":"stdout","logger":"task"}
